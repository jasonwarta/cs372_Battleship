2016.02.08 Monday
Groups were assigned.  Laurin and I decided explore the possibility of designing
our project in Javascript.  We came up with three user stories and assigned them 
difficulty levels.

2016.02.09 Tuesday
I spent 1.5 hours researching the possible frameworks we could use for our
project, and settled on Meteor.  I then spent 2.5 hours working through a 
Metoer tutorial.

2016.02.10 Wednesday
I spent 1 hour researching testing frameworks for Meteor

2016.02.11 Thursday
I spent 1.5 hours continuing research of testing frameworks for Meteor.  The best
testing framework I found is Gagarin, because it is the most current of the several
I located, and it seems to be the only testing framework still maintained by the 
designers.

2016.02.12 Friday


2016.02.13 Saturday
I went shopping, watched Deadpool, and played video games.

2016.02.14 Sunday
I spent 2.5 hours studying and working through a CSS tutorial in order to become
familiar enough with the language to format a webpage.  Studying for Monday Calc test.

2016.02.15 Monday
I spent 3 hours reading about javascript and css, implemented a method to populate the 
grid with elements for each cell, and included accounts management.

2016.02.16 Tuesday
4 hours. Added additional info to autogenerated elements; tweaked initGrid method to
delete old child elements; created button to reset gameboard.  Fixed a server-side 
error by using an if block to only allow initGrid to run on the client side.

2016.02.17 Wednesday
7 hours, including class.  More unit testing research and experimentation.

2016.02.18 Thursday
Work, spent most of my free time trying to finish lexer for cs331
1.5 hours. more reading about unit testing for meteor/js. Found and purchased access to 
a website/ebook about TDD/IDD with meteor.

2016.02.19 Friday
9 hours, including class. Laurin found a unit testing platform that seems to work.
In an effort to learn more about it by putting in random values, I attempted to force
the tests she wrote to fail. After several attempts, I went back to google and an ebook
I found about the framework.  Eventually got tests to work.  Played around with CSS/HTML
and got the UI to a "almost done" state.

2016.02.20 Saturday/Sunday early morning
CSC/CCDC Practice Competition, still working out fringe cases in lexer
7 hours.  Came up with some unit tests and wrote the code to make them pass. I kinda 
wrote them side-by-side because when I was prototyping the functions to be tested I got 
carried away a little bit. Refactored the way the cell generation is done, so it isn't
tied to the ID of the logged in user.  This reduce the size of the database we need to
share between clients going forward.

2016.02.21 Sunday
Spent all day working on hw for cs321, cs331, math253

2016.02.22 Monday
5 hours, including class. Beating my head against the wall trying to figure out how
to update multiple documents in a database.
Spent a couple hours in the evening working on cs331 lexer.

2016.02.23 Tuesday
Working out fringe issues in cs331 lexer.

2016.02.24 Wednesday
5 hours. Played around with the account functionality built into Meteor in preperation
for multiplayer.  Set up and passed a test to determine how easy it will be to link
players.  

2016.02.25 Thursday
4 hours.  Finally figured out how to update a group of items in a collection.  Ruled out
dynamic updating for mouseover due to extreme lag in both server-side and client-side 
implementations.  Spent a couple more hours working on lexer.

2016.02.26 Friday
4 hours including in-class.  

2016.02.27 Saturday
CSC club mtg for 4.5 hours.

2016.02.28 Sunday
Spent most of day studying math.
1.5 hrs, wrote and passed new tests for ship positioning

2016.02.29 Monday
Reorganized directory structure to better allow for multi-file game structure.
client code (js, css, html) goes in client directory, server code (js) goes in 
server directory.  collections are declared in a separate .js in the parent 
directory so both client and server code can see them.

2016.03.01 Tuesday
2016.03.02 Wednesday
2016.03.03 Thursday
Spent a couple hours tinkering with little things on project here and there.
Didn't get much done on anything these days due to work and being sick.  I 
guess I should have written down my design ideas so Laurin could work on stuff
or I could do work without having to put a lot of thought into it.  I spent a 
few hours studying for math midterm test and working on parser.

2016.03.04 Friday
4 hours including class. Worked out some ideas regarding how to match
players. Concluded that we will have to keep track of the enemy user's
email because Meteor refuses to return the enemy user's ID from the server
function call.

2016.03.05 Saturday
CSC/CCDC review and practice. Completed parser for cs331, passing almost
all tests.

2016.03.06 Sunday
Did some troubleshooting on parser, didn't arrive at any conclusions about
why the tests were failing.

2016.03.07 Monday
1.5 hours.  Studied the problem of matchmaking some more, and wrote down some
ideas about how the game shot tracking could go together.

2016.03.08 Tuesday
5 hours. Realized we would need a much more intricate system for tracking user
sessions and turns, so I read a bunch of stackoverflow questions and multiple
projects worth of source code looking for a good solution.  didn't find much of
anything useful, so I wrote the code to track player shots.

	The game is suffering from a type of feature creep resulting from the
	the developers discovering facets of the language and framework that 
	have the potential to drastically reduce work and improve the game, after
	the parts of the game that could utilize said features have long since been
	written. This impacts the moral of the developers, as they realize that 
	parts of the code could be either re-written entirely, or written crudely
	utilizing mismatched techniques.


2016.03.09 Wednesday
3 hours including class. Wrote a little code, but mainly read source code from
other pojects to try to figure out how other people have handled multiplayer
matching, sessions and session tracking, and turns.

2016.03.10 Thursday
6 hours. Worked on ways to display friendly and enemy hits on the board.  I 
keep running up against difficulties abstracting code as necessary to display
shots for both players.  Decided to track all cell states within one Collection.
This is "insecure" because someone with minimal knowledge of the platform could
use the JS console to spy on their opponent's ship locations but this is the 
best way to implement the game given the time frame.  Redesigned the ship 
placing and displaying functions to not check for out of bounds ships, and only
register "ship" cells in CellArray when the user confirms they are done placing
their ships. 

2016.03.11 Friday
3 hours.  Finished implementing ship placement and shot tracking.  There is no 
turn or status tracking between players, but ships, shots, and misses appear 
where they should.


